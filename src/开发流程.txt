一.estore简单电子商城(基于servlet/jsp基础)
	----(1)用户模块
			1).用户注册(验证码校验 js表单校验 后台数据校验 发送激活邮箱)
			2).用户激活(定时器)
			3).用户登录(记住用户名和密码)
			4).用户注销
		(2)商品模块
			1).商品添加(商品图片的上传---基于文件上传)
			2).商品列表
			3).商品详细信息
			4).购物车 增删查改(Session)
		(3)订单模块
			1).生成订单(事务控制)
			2).订单查询(多表设计 多表查询)
			3).删除订单(事务控制)
		(4)支付模块
			1).在线支付(调用第三方接口)
			2).销售榜单下载(如何将数据库组织成Excel文件下载)
	
--------准备
			技术选型:Servlet+jsp+tomcat+mysql;
			软件架构:javaee的经典三层架构  接口+配置文件+工厂类实现解耦
			
			包结构:
				com.itcast.web
						  .service
						  .dao
						  .domain
						  .utils
						  .factory
						  .exception
						  .test
						  .filter
						  .listener
			导入第三方jar包
				junit  jstl  beanutils mysql驱动 c3p0 dbutils commons-fileupload
				
			数据库表的设计
			
				用户表: id 用户名 密码 昵称 邮箱 角色 激活状态 激活码 注册时间
				商品表: id 商品名称 商品单价 库存数量 商品种类 描述信息 图片地址
				订单表: id 收货地址 下单时间 点单金额 所属用户
				订单项: 订单id 商品id 购买数量
				
				具体设计实现:
					用户表 ---- 订单表
						 一个用户对应有多个订单, 一个订单只能属于一个用户
					 	 所以:用户表 1 <---> 多 订单表
					 	 ---->:在多的那张表中创建持有1的的外键
		
					订单表 ---- 商品表
						 一个订单表中有多个商品,一个商品属于多个订单
						 订单表 多 <---> 多 商品表
						 对于这样一个多对多的关系表,需要建立第三方中间表 
						 订单表 * -- 1 订单项表 1-- * 商品表
				
					
					创建新用户：
						create user estore identified by 'estore';
					授权：
						grant all on estore.* to estore;	
			
			
			create table users (
				id int primary key auto_increment,
				username varchar(40),
				password varchar(100),
				nickname varchar(40),
				email varchar(100),
				role varchar(100) ,
				state int ,
				activecode varchar(100),
				updatetime timestamp
			);

			 create table products(
				id varchar(100) primary key ,
				name varchar(40),
				price double,
				category varchar(40),
				pnum int ,
				imgurl varchar(100),
				description varchar(255)
			);

			create table orders(
				id varchar(100) primary key,
				money double,
				receiverinfo varchar(255),
				paystate int,
				ordertime timestamp,
				user_id int ,
				foreign key(user_id) references users(id)
			);

			create table orderitem(
				order_id varchar(100),
				product_id varchar(100),
				buynum int ,
				primary key(order_id,product_id), #联合主键,两列的值加在一起作为这张表的主键使用
				foreign key(order_id) references orders(id),
				foreign key(product_id) references products(id)
			);
			
			
			javabean
				相关表的类
			软件分层
				通过使用impl实现dao接口,实现工厂类 
			友好错误提示页面
				404.jsp   500.jsp
				 <error-page>
				  	<error-code>404</error-code>
				  	<location>/error/404.jsp</location>
				 </error-page>
			全站乱码解决过滤器
				
			工具类
			
			
			
			
			
			
			
			
			
			
			
			
			
			
				
				
				
				